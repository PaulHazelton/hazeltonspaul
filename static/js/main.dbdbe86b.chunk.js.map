{"version":3,"sources":["common/components.tsx","home/home.tsx","common/popups.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","window","onscroll","matchMedia","matches","document","body","scrollTop","documentElement","style","setProperty","className","src","alt","id","Heading","props","text","ExtLink","href","url","target","rel","noCSS","children","Welcome","ConnectList","Connection","imgPath","label","ProjectList","Home","PopButton","onClick","schema","actionType","route","console","log","action","actionArgs","setShowPopUp","PopUp","data","close","message","buttons","map","index","App","useState","popData","showPopUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4LAAO,SAASA,IAcf,OAXAC,OAAOC,SAAW,WACZD,OAAOE,WAAW,sBAAsBC,UAGzCC,SAASC,KAAKC,UAAY,GAAKF,SAASG,gBAAgBD,UAAY,EACvEF,SAASG,gBAAgBC,MAAMC,YAAY,cAAe,OAE1DL,SAASG,gBAAgBC,MAAMC,YAAY,cAAe,OAK3D,mCACC,qBAAKC,UAAU,OAAOC,IAAI,aAAaC,IAAI,SAC3C,8BACC,qBAAIC,GAAG,gBAAP,UACC,oBAAIA,GAAG,gBAAP,sBACA,oBAAIA,GAAG,gBAAP,wBACA,oBAAIA,GAAG,6BAOL,SAASC,EAAQC,GACvB,OACC,sBAAKL,UAAU,UAAf,UACC,6BAAKK,EAAMC,OAAU,0BAWjB,SAASC,EAAQF,GACvB,OACC,mBACCG,KAAMH,EAAMI,IACZC,OAAO,SACPC,IAAI,sBACJX,UAAWK,EAAMO,MAAO,GAAMP,EAAML,UAAWK,EAAML,UAAY,WAJlE,SAMEK,EAAMQ,W,MC7BV,SAASC,IACR,OACC,qBAAKX,GAAG,cAAR,2FAMF,SAASY,IACR,OACC,qBAAKf,UAAU,UAAf,SAEC,sBAAKG,GAAG,kBAAR,UACC,cAACa,EAAD,CACCP,IAAK,kCACLQ,QAAS,8BACTf,IAAK,SACLgB,MAAO,WAER,cAACF,EAAD,CACCP,IAAK,6CACLQ,QAAS,8BACTf,IAAK,WACLgB,MAAO,aAER,cAACF,EAAD,CACCP,IAAK,uDACLQ,QAAS,iCACTf,IAAK,kBACLgB,MAAO,yBAaZ,SAASF,EAAWX,GACnB,OACC,sBAAKL,UAAU,aAAf,UACC,cAACO,EAAD,CAASE,IAAKJ,EAAMI,IAAKT,UAAU,kBAAnC,SACC,qBAAKA,UAAU,iBAAiBC,IAAKI,EAAMY,QAASf,IAAKG,EAAMH,QAEhE,oBAAIF,UAAU,mBAAd,SAAkCK,EAAMa,WAK3C,SAASC,IACR,OACC,qCACC,sBAAKnB,UAAU,WAAWG,GAAG,cAA7B,UACC,sBAAKH,UAAU,eAAf,UACC,4CACA,2EAC2C,uBAD3C,+HAKD,qBAAKA,UAAU,kBAAf,SACC,qBAAKC,IAAI,0BAA0BC,IAAI,cAGzC,sBAAKF,UAAU,WAAWG,GAAG,cAA7B,UACC,sBAAKH,UAAU,eAAf,UACC,wDACA,kFACkD,cAACO,EAAD,CAASE,IAAI,qCAAb,iCADlD,mMAG8D,cAACF,EAAD,CAASE,IAAI,kCAAb,wCAG7D,wBAAQT,UAAU,SAAlB,SAA2B,kDAG7B,qBAAKA,UAAU,kBAAf,SACC,qBAAKC,IAAI,4BAA4BC,IAAI,iBAO/BkB,MA3Gf,WACC,OACC,qCACC,sBAAKpB,UAAU,UAAUG,GAAG,kBAA5B,UACC,cAACC,EAAD,CAASE,KAAK,eACd,cAACQ,EAAD,OAED,sBAAKd,UAAU,UAAUG,GAAG,kBAA5B,UACC,cAACC,EAAD,CAASE,KAAK,gBACd,cAACa,EAAD,OAED,sBAAKnB,UAAU,UAAf,UACC,cAACI,EAAD,CAASE,KAAK,iCACd,cAACS,EAAD,WCsBH,SAASM,EAAUhB,GAiCnB,OACC,wBAAQL,UAAU,aAAasB,QA9BZ,WACnB,OAAQjB,EAAMkB,OAAOC,YACpB,IAAK,QACAnB,EAAMkB,OAAOE,OAIhBC,QAAQC,IAAI,+CACb,MAED,IAAK,OAEJ,MAED,IAAK,SACAtB,EAAMkB,OAAOK,OAChBvB,EAAMkB,OAAOK,OAAOvB,EAAMkB,OAAOM,YAEjCH,QAAQC,IAAI,iDAOftB,EAAMyB,cAAa,IAKnB,SAAsDzB,EAAMkB,OAAOL,QAItDa,MAtEd,SAAe1B,GAQf,OACC,qBAAKL,UAAU,eAAf,SACC,sBAAKA,UAAU,WAAf,UAEEK,EAAM2B,KAAKC,MACX,wBAAQ9B,GAAG,QAAQmB,QAVT,WACbjB,EAAMyB,cAAa,IAShB,SAAmC,sBAAM3B,GAAG,IAAT,oBACnC,qBAAKH,UAAU,iBAEhB,sBAAKA,UAAU,cAAf,UACC,mBAAGA,UAAU,aAAb,SAA2BK,EAAM2B,KAAKE,UACtC,qBAAK/B,GAAG,oBAAR,SACEE,EAAM2B,KAAKG,QAAQC,KACnB,SAACb,EAAQc,GAAT,OAAmB,cAAChB,EAAD,CAAuBS,aAAczB,EAAMyB,aAAcP,OAAQA,GAAjDc,iBCkB3BC,MApCf,WAEC,MAA8BC,mBAAkB,CAC/CL,QAAS,kCACTC,QAAS,CACR,CACCjB,MAAO,QACPM,WAAY,WALf,mBAAOgB,EAAP,KASA,GATA,KASkCD,oBAAkB,IAApD,mBAAOE,EAAP,KAAkBX,EAAlB,KASA,OACC,sBAAK3B,GAAG,MAAR,UACC,cAACd,EAAD,IACA,qBAAKc,GAAG,eAAR,SACA,qBAAKA,GAAG,eAAR,SACC,cAAC,EAAD,QAKAsC,EAAY,cAAC,EAAD,CAAOX,aAAcA,EAAcE,KAAMQ,IAAc,SCvBxDE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3D,SAAS4D,eAAe,SAM1BZ,K","file":"static/js/main.dbdbe86b.chunk.js","sourcesContent":["export function NavBar() {\r\n\r\n\t// window scroll thing\r\n\twindow.onscroll = function() {\r\n\t\tif (!window.matchMedia('(min-width: 800px)').matches)\r\n\t\t\treturn;\r\n\r\n\t\tif (document.body.scrollTop > 5 || document.documentElement.scrollTop > 5)\r\n\t\t\tdocument.documentElement.style.setProperty('--header-fs', '0.8');\r\n\t\telse {\r\n\t\t\tdocument.documentElement.style.setProperty('--header-fs', '1');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<img className='logo' src='./logo.svg' alt='logo' />\r\n\t\t\t<nav>\r\n\t\t\t\t<ul id='nav-link-list'>\r\n\t\t\t\t\t<li id='nav-list-item'>About Me</li>\r\n\t\t\t\t\t<li id='nav-list-item'>Contact Me</li>\r\n\t\t\t\t\t<li id='overflow-x-space'></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport function Heading(props: {text: string}) {\r\n\treturn(\r\n\t\t<div className='heading'>\r\n\t\t\t<h1>{props.text}</h1><hr></hr>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ninterface ELProps {\r\n\turl: string,\r\n\tchildren?: React.ReactNode,\r\n\tnoCSS?: boolean,\r\n\tclassName?: string,\r\n}\r\nexport function ExtLink(props: ELProps) {\r\n\treturn (\r\n\t\t<a\r\n\t\t\thref={props.url}\r\n\t\t\ttarget='_blank'\r\n\t\t\trel='noopener noreferrer'\r\n\t\t\tclassName={props.noCSS? '' : (props.className? props.className : 'ext-link')}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</a>\r\n\t);\r\n}","import { ExtLink, Heading } from '../common/components';\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='section' id='welcome-section'>\r\n\t\t\t\t<Heading text='What&apos;s up?'/>\r\n\t\t\t\t<Welcome />\r\n\t\t\t</div>\r\n\t\t\t<div className='section' id='project-section'>\r\n\t\t\t\t<Heading text='My Projects'/>\r\n\t\t\t\t<ProjectList />\r\n\t\t\t</div>\r\n\t\t\t<div className='section'>\r\n\t\t\t\t<Heading text='Other Places You Can Find Me' />\r\n\t\t\t\t<ConnectList />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nfunction Welcome() {\r\n\treturn (\r\n\t\t<div id='welcome-box'>\r\n\t\t\tMy name is Paul Hazelton. I'm a web developer, programmer, and game designer.\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ConnectList() {\r\n\treturn (\r\n\t\t<div className='section'>\r\n\t\t\t{/* <h2>Other Places You Can Find Me</h2> */}\r\n\t\t\t<div id='connection-list'>\r\n\t\t\t\t<Connection\r\n\t\t\t\t\turl={'https://github.com/PaulHazelton'}\r\n\t\t\t\t\timgPath={'images/github-light-120.png'}\r\n\t\t\t\t\talt={'github'}\r\n\t\t\t\t\tlabel={'GitHub'}\r\n\t\t\t\t/>\r\n\t\t\t\t<Connection\r\n\t\t\t\t\turl={'https://www.linkedin.com/in/paul-hazelton/'}\r\n\t\t\t\t\timgPath={'images/linked-in-circle.png'}\r\n\t\t\t\t\talt={'LinkedIn'}\r\n\t\t\t\t\tlabel={'LinkedIn'}\r\n\t\t\t\t/>\r\n\t\t\t\t<Connection\r\n\t\t\t\t\turl={'https://openprocessing.org/user/103154?view=sketches'}\r\n\t\t\t\t\timgPath={'images/openprocessing-logo.png'}\r\n\t\t\t\t\talt={'Open Processing'}\r\n\t\t\t\t\tlabel={'Open Processing'}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ninterface ConnectionProps {\r\n\turl: string,\r\n\timgPath: string,\r\n\talt: string,\r\n\tlabel: string,\r\n}\r\nfunction Connection(props: ConnectionProps) {\r\n\treturn (\r\n\t\t<div className='connection'>\r\n\t\t\t<ExtLink url={props.url} className='connection-link'>\r\n\t\t\t\t<img className='connection-pic' src={props.imgPath} alt={props.alt} />\r\n\t\t\t</ExtLink>\r\n\t\t\t<h3 className='connection-label'>{props.label}</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ProjectList() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='info-box' id='project-box'>\r\n\t\t\t\t<div className='project-info'>\r\n\t\t\t\t\t<h2>This Site!</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThis site is currently under construction!<br></br>\r\n\t\t\t\t\t\tThis very site is a typescript react app. I really like working with react, so I decided to make my portfolio with it.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='project-img-box'>\r\n\t\t\t\t\t<img src='images/construction.png' alt='TODO' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='info-box' id='project-box'>\r\n\t\t\t\t<div className='project-info'>\r\n\t\t\t\t\t<h2>All Things Auctionable</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tAuction software for the non-profit organization <ExtLink url='https://www.allthingspossible.org/'>All Things Possible</ExtLink>. This was a Winthrop University team project, but now it is being finished and maintained by myself and my friend Michael Hazell.\r\n\r\n\t\t\t\t\t\tYou can view the site in action on the development server at <ExtLink url='https://allthingsauctionable.ml'>allthingsauctionable.ml</ExtLink>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t{/* <ExtLink url='https://allthingsauctionable.ml'> */}\r\n\t\t\t\t\t\t<button className='button'><span>View Site</span></button>\r\n\t\t\t\t\t{/* </ExtLink> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='project-img-box'>\r\n\t\t\t\t\t<img src='images/ata-screenshot.png' alt='TODO' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Home;","import { PopProps, PopButtonProps } from './interfaces'\r\n\r\n/** This component is a generic pop up\r\n * @param props The data that describes the pop up along with app's setShowPopUp function\r\n */\r\n function PopUp(props: PopProps) {\r\n\r\n\t// The basic close function. This is called when the x is clicked\r\n\tconst close = () => {\r\n\t\tprops.setShowPopUp(false);\r\n\t}\r\n\r\n\t// Display the popUp (this should only be called by app so it's on top of everything)\r\n\treturn (\r\n\t\t<div className='popUpOverlay'>\r\n\t\t\t<div className='popUpBox'>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.data.close?\r\n\t\t\t\t\t<button id='close' onClick={close}><span id='x'>&times;</span></button> :\r\n\t\t\t\t\t<div className='popup-spacer'></div>\r\n\t\t\t\t}\r\n\t\t\t\t<div className='pop-content'>\r\n\t\t\t\t\t<p className='popMessage'>{props.data.message}</p>\r\n\t\t\t\t\t<div id='pop-button-holder'>\r\n\t\t\t\t\t\t{props.data.buttons.map(\r\n\t\t\t\t\t\t\t(schema, index) => <PopButton key={index} setShowPopUp={props.setShowPopUp} schema={schema} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n/** This component is the generic button that appears on a pop up.\r\n * @param props The button description, and the setShowPopUp so we can close the pop up.\r\n */\r\n function PopButton(props: PopButtonProps) {\r\n\t// const history = useHistory();\r\n\t\r\n\t// Does the correct action depending on the button schema\r\n\tconst handleClick = () => {\r\n\t\tswitch (props.schema.actionType) {\r\n\t\t\tcase 'route': {\r\n\t\t\t\tif (props.schema.route) {\r\n\t\t\t\t\t// history.push(props.schema.route);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.log('route pop up button with no route specified');\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'back': {\r\n\t\t\t\t// history.goBack();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'custom': {\r\n\t\t\t\tif (props.schema.action)\r\n\t\t\t\t\tprops.schema.action(props.schema.actionArgs);\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.log('Custom pop up button with no action specified');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'none': {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprops.setShowPopUp(false);\r\n\t}\r\n\t\r\n\t// Display the button\r\n\treturn(\r\n\t\t<button className='pop-button' onClick={handleClick}>{props.schema.label}</button>\r\n\t)\r\n}\r\n\r\nexport default PopUp;\r\n","import React, { useState } from 'react';\nimport { NavBar } from './common/components';\nimport './App.css';\nimport Home from './home/home';\nimport { PopData } from './common/interfaces';\nimport PopUp from './common/popups';\n\nfunction App() {\n\n\tconst [popData, setPopData] = useState<PopData>({\n\t\tmessage: 'Empty Pop Up! Someone messed up',\t// This should never be seen\n\t\tbuttons: [\n\t\t\t{\n\t\t\t\tlabel: 'Oops!',\n\t\t\t\tactionType: 'none',\n\t\t\t}\n\t\t], // Empty array of buttons\n\t});\n\tconst [showPopUp, setShowPopUp] = useState<boolean>(false);\n\n\t// Creates a pop up. This replaces setPopData and setShowPopUp\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tfunction createPopUp(data: PopData) {\n\t\tsetPopData(data);\n\t\tsetShowPopUp(true);\n\t}\n\n\treturn (\n\t\t<div id='App'>\n\t\t\t<NavBar />\n\t\t\t<div id='center-pane1'>\n\t\t\t<div id='center-pane2'>\n\t\t\t\t<Home />\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t// Show popup if showPopUp is true, nothing otherwise\n\t\t\t\tshowPopUp ? <PopUp setShowPopUp={setShowPopUp} data={popData} /> : null\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}